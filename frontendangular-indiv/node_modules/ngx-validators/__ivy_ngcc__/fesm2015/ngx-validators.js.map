{"version":3,"file":"ngx-validators.js","sources":["ngx-validators/components/abstract-control-util.ts","ngx-validators/components/password/password-validators.ts","ngx-validators/components/email/email-util.ts","ngx-validators/components/email/email-validators.ts","ngx-validators/components/universal/universal-validators.ts","ngx-validators/components/creditcard/creditcard-validators.ts","ngx-validators/components/password/password.directive.ts","ngx-validators/components/email/email.directive.ts","ngx-validators/components/universal/universal.directive.ts","ngx-validators/components/creditcard/creditcard.directive.ts","ngx-validators/components/equal-to/equal-to.directive.ts","ngx-validators/components/validators.module.ts","ngx-validators/components/equal-to/equal-to-validator.ts","ngx-validators/public_api.ts","ngx-validators/ngx-validators.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["import { AbstractControl } from \"@angular/forms\";\n\nexport class AbstractControlUtil {\n  static isNotPresent(control: AbstractControl): boolean {\n    const value = control.value;\n    if (value === undefined || value === null) {\n      return true;\n    }\n    return value !== \"\" ? false : true;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static addError(control: AbstractControl, errorId: string, value: any) {\n    if (!control.errors) {\n      control.setErrors({ [errorId]: value });\n    } else if (!control.hasError(errorId)) {\n      control.errors[errorId] = value;\n    }\n  }\n\n  static removeError(control: AbstractControl, errorId: string) {\n    if (control.errors && control.hasError(errorId)) {\n      if (Object.keys(control.errors).length > 1) {\n        delete control.errors[errorId];\n      } else {\n        control.setErrors(null);\n      }\n    }\n  }\n}\n","import { AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { AbstractControlUtil } from \"./../abstract-control-util\";\n\n// tslint:disable-next-line:variable-name\nexport class PasswordValidators {\n  public static repeatCharacterRegexRule(repeatCount: number) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const repeatDec = repeatCount - 1;\n      const pattern = \"([^\\\\x00-\\\\x1F])\\\\1{\" + repeatDec + \"}\";\n      if (control.value !== \"\" && new RegExp(pattern).test(control.value)) {\n        return { repeatCharacterRegexRule: { repeatCount } };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static allowedCharacterRule(allowedChars: string[]): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      let valid = true;\n      const invalidChars: string[] = [];\n\n      for (const char of value) {\n        if (allowedChars.indexOf(char) === -1) {\n          valid = false;\n          if (invalidChars.indexOf(char) === -1) {\n            invalidChars.push(char);\n          }\n        }\n      }\n      if (!valid) {\n        return {\n          allowedCharacterRule: {\n            invalidChars,\n            allowedChars,\n          },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static alphabeticalCharacterRule(amount: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length === 0) {\n        return undefined;\n      }\n      const pattern = /[^A-Za-z]+/g;\n      const stripped = value.replace(pattern, \"\");\n      if (stripped.length < amount) {\n        return {\n          alphabeticalCharacterRule: {\n            required: amount,\n            actual: stripped.length,\n          },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static digitCharacterRule(amount: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length === 0) {\n        return undefined;\n      }\n      const pattern = /[^0-9\\.]+/g;\n      const stripped = value.replace(pattern, \"\");\n      if (stripped.length < amount) {\n        return {\n          digitCharacterRule: { required: amount, actual: stripped.length },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static lowercaseCharacterRule(amount: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length === 0) {\n        return undefined;\n      }\n      const pattern = /[^a-z]+/g;\n      const stripped = value.replace(pattern, \"\");\n      if (stripped.length < amount) {\n        return {\n          lowercaseCharacterRule: { required: amount, actual: stripped.length },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static uppercaseCharacterRule(amount: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length === 0) {\n        return undefined;\n      }\n      const pattern = /[^A-Z]+/g;\n      const stripped = value.replace(pattern, \"\");\n      if (stripped.length < amount) {\n        return {\n          uppercaseCharacterRule: { required: amount, actual: stripped.length },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static specialCharacterRule(amount: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length === 0) {\n        return undefined;\n      }\n      const pattern = /[\\w\\s]+/g;\n      const stripped = value.replace(pattern, \"\");\n      if (stripped.length < amount) {\n        return {\n          specialCharacterRule: { required: amount, actual: stripped.length },\n        };\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  public static mismatchedPasswords(passwordControlName?: string, confirmPasswordControlName?: string): ValidatorFn {\n    const validator = (group: AbstractControl): ValidationErrors => {\n      const newPasswordValue = group.get(passwordControlName ? passwordControlName : \"newPassword\").value;\n      const newPasswordConfirmValue = group.get(\n        confirmPasswordControlName ? confirmPasswordControlName : \"confirmPassword\"\n      ).value;\n      if (newPasswordValue !== newPasswordConfirmValue) {\n        AbstractControlUtil.addError(\n          group.get(confirmPasswordControlName ? confirmPasswordControlName : \"confirmPassword\"),\n          \"mismatchedPasswords\",\n          true\n        );\n\n        return { mismatchedPasswords: true };\n      } else {\n        AbstractControlUtil.removeError(\n          group.get(confirmPasswordControlName ? confirmPasswordControlName : \"confirmPassword\"),\n          \"mismatchedPasswords\"\n        );\n      }\n      return undefined;\n    };\n    return validator;\n  }\n}\n","/*\n * Code fromMailcheck https://github.com/mailcheck/mailcheck\n * Author\n * Derrick Ko (@derrickko)\n *\n * Released under the MIT License.\n *\n * v 1.1.2\n */\n\nexport interface EmailOptions {\n  domains: string[];\n  secondLevelDomains: string[];\n  topLevelDomains: string[];\n}\n\nexport interface SplittedEmail {\n  topLevelDomain: string;\n  secondLevelDomain: string;\n  domain: string;\n  address: string;\n}\n\nexport interface Suggestion {\n  address: string;\n  domain: string;\n  full: string;\n}\n\ninterface Offset {\n  c1: number;\n  c2: number;\n  trans: boolean;\n}\n\nexport class EmailSuggestion {\n  private defaultOptions: EmailOptions = {\n    domains: [\n      \"msn.com\",\n      \"bellsouth.net\",\n      \"telus.net\",\n      \"comcast.net\",\n      \"optusnet.com.au\",\n      \"earthlink.net\",\n      \"qq.com\",\n      \"sky.com\",\n      \"icloud.com\",\n      \"mac.com\",\n      \"sympatico.ca\",\n      \"googlemail.com\",\n      \"att.net\",\n      \"xtra.co.nz\",\n      \"web.de\",\n      \"cox.net\",\n      \"gmail.com\",\n      \"ymail.com\",\n      \"yahoo.com\",\n      \"aim.com\",\n      \"rogers.com\",\n      \"verizon.net\",\n      \"rocketmail.com\",\n      \"google.com\",\n      \"optonline.net\",\n      \"sbcglobal.net\",\n      \"aol.com\",\n      \"me.com\",\n      \"btinternet.com\",\n      \"charter.net\",\n      \"shaw.ca\",\n    ],\n    secondLevelDomains: [\"yahoo\", \"hotmail\", \"mail\", \"live\", \"outlook\", \"gmx\"],\n    topLevelDomains: [\n      \"com\",\n      \"com.au\",\n      \"com.tw\",\n      \"ca\",\n      \"co.nz\",\n      \"co.uk\",\n      \"de\",\n      \"fr\",\n      \"it\",\n      \"ru\",\n      \"net\",\n      \"org\",\n      \"edu\",\n      \"gov\",\n      \"jp\",\n      \"nl\",\n      \"kr\",\n      \"se\",\n      \"eu\",\n      \"ie\",\n      \"co.il\",\n      \"us\",\n      \"at\",\n      \"be\",\n      \"dk\",\n      \"hk\",\n      \"es\",\n      \"gr\",\n      \"ch\",\n      \"no\",\n      \"cz\",\n      \"in\",\n      \"net\",\n      \"net.au\",\n      \"info\",\n      \"biz\",\n      \"mil\",\n      \"co.jp\",\n      \"sg\",\n      \"hu\",\n      \"uk\",\n    ],\n  };\n\n  public suggest(email: string, options?: EmailOptions): { [key: string]: Suggestion } {\n    let opt = this.defaultOptions;\n    if (options !== undefined) {\n      opt = options;\n    }\n    const emailParts = this.splitEmail(email.toLowerCase());\n\n    if (!emailParts) {\n      return undefined;\n    }\n\n    if (opt.secondLevelDomains && opt.topLevelDomains) {\n      // If the email is a valid 2nd-level + top-level, do not suggest anything.\n      if (\n        opt.secondLevelDomains.indexOf(emailParts.secondLevelDomain) !== -1 &&\n        opt.topLevelDomains.indexOf(emailParts.topLevelDomain) !== -1\n      ) {\n        return undefined;\n      }\n    }\n\n    let closestDomain = this.findClosestDomain(emailParts.domain, opt.domains, 2);\n    if (closestDomain) {\n      if (closestDomain === emailParts.domain) {\n        // The email address exactly matches one of the supplied domains; do not return a suggestion.\n        return undefined;\n      } else {\n        // The email address closely matches one of the supplied domains; return a suggestion\n        return {\n          suggestion: {\n            address: emailParts.address,\n            domain: closestDomain,\n            full: emailParts.address + \"@\" + closestDomain,\n          },\n        };\n      }\n    }\n\n    const closestSecondLevelDomain = this.findClosestDomain(emailParts.secondLevelDomain, opt.secondLevelDomains, 2);\n    const closestTopLevelDomain = this.findClosestDomain(emailParts.topLevelDomain, opt.topLevelDomains, 2);\n\n    if (emailParts.domain) {\n      closestDomain = emailParts.domain;\n      let rtrn = false;\n\n      if (closestSecondLevelDomain && closestSecondLevelDomain !== emailParts.secondLevelDomain) {\n        // The email address may have a mispelled second-level domain; return a suggestion\n        closestDomain = closestDomain.replace(emailParts.secondLevelDomain, closestSecondLevelDomain);\n        rtrn = true;\n      }\n\n      if (\n        closestTopLevelDomain &&\n        closestTopLevelDomain !== emailParts.topLevelDomain &&\n        emailParts.secondLevelDomain !== \"\"\n      ) {\n        // The email address may have a mispelled top-level domain; return a suggestion\n        closestDomain = closestDomain.replace(new RegExp(emailParts.topLevelDomain + \"$\"), closestTopLevelDomain);\n        rtrn = true;\n      }\n\n      if (rtrn) {\n        return {\n          suggestion: {\n            address: emailParts.address,\n            domain: closestDomain,\n            full: emailParts.address + \"@\" + closestDomain,\n          },\n        };\n      }\n    }\n\n    /* The email address exactly matches one of the supplied domains, does not closely\n     * match any domain and does not appear to simply have a mispelled top-level domain,\n     * or is an invalid email address; do not return a suggestion.\n     */\n    return undefined;\n  }\n\n  public splitEmail(email: string) {\n    const parts = email.trim().split(\"@\");\n\n    if (parts.length < 2) {\n      return undefined;\n    }\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i] === \"\") {\n        return undefined;\n      }\n    }\n\n    const result = {\n      topLevelDomain: \"\",\n      secondLevelDomain: \"\",\n      domain: parts.pop(),\n      address: \"\",\n    };\n\n    const domainParts = result.domain.split(\".\");\n\n    if (domainParts.length === 0) {\n      return undefined;\n    } else if (domainParts.length === 1) {\n      result.topLevelDomain = domainParts[0];\n    } else {\n      // The address has a domain and a top-level domain\n      result.secondLevelDomain = domainParts[0];\n      for (let j = 1; j < domainParts.length; j++) {\n        result.topLevelDomain += domainParts[j] + \".\";\n      }\n      result.topLevelDomain = result.topLevelDomain.substring(0, result.topLevelDomain.length - 1);\n    }\n\n    result.address = parts.join(\"@\");\n\n    return result;\n  }\n\n  private findClosestDomain(domain: string, domains: string[], threshold: number): string {\n    let dist;\n    let minDist = Infinity;\n    let closestDomain = null;\n\n    if (!domain || !domains) {\n      return undefined;\n    }\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i < domains.length; i++) {\n      if (domain === domains[i]) {\n        return domain;\n      }\n      dist = this.sift4Distance(domain, domains[i], 5);\n      if (dist < minDist) {\n        minDist = dist;\n        closestDomain = domains[i];\n      }\n    }\n\n    if (minDist <= threshold && closestDomain !== null) {\n      return closestDomain;\n    } else {\n      return undefined;\n    }\n  }\n\n  private sift4Distance(s1: string, s2: string, maxOffset: number): number {\n    // sift4: https://siderite.blogspot.com/2014/11/super-fast-and-accurate-string-distance.html\n    if (maxOffset === undefined) {\n      maxOffset = 5; // default\n    }\n\n    if (!s1 || !s1.length) {\n      if (!s2) {\n        return 0;\n      }\n      return s2.length;\n    }\n\n    if (!s2 || !s2.length) {\n      return s1.length;\n    }\n\n    const l1 = s1.length;\n    const l2 = s2.length;\n\n    let c1 = 0; // cursor for string 1\n    let c2 = 0; // cursor for string 2\n    let lcss = 0; // largest common subsequence\n    let localCS = 0; // local common substring\n    let trans = 0; // number of transpositions ('ab' vs 'ba')\n    const offsetArr: Offset[] = []; // offset pair array, for computing the transpositions\n\n    while (c1 < l1 && c2 < l2) {\n      if (s1.charAt(c1) === s2.charAt(c2)) {\n        localCS++;\n        let isTrans = false;\n        // see if current match is a transposition\n        let i = 0;\n        while (i < offsetArr.length) {\n          const ofs = offsetArr[i];\n          if (c1 <= ofs.c1 || c2 <= ofs.c2) {\n            // when two matches cross, the one considered a transposition is the one with the largest difference in offsets\n            isTrans = Math.abs(c2 - c1) >= Math.abs(ofs.c2 - ofs.c1);\n            if (isTrans) {\n              trans++;\n            } else {\n              if (!ofs.trans) {\n                ofs.trans = true;\n                trans++;\n              }\n            }\n            break;\n          } else {\n            if (c1 > ofs.c2 && c2 > ofs.c1) {\n              offsetArr.splice(i, 1);\n            } else {\n              i++;\n            }\n          }\n        }\n        offsetArr.push({\n          c1,\n          c2,\n          trans: isTrans,\n        });\n      } else {\n        lcss += localCS;\n        localCS = 0;\n        if (c1 !== c2) {\n          c1 = c2 = Math.min(c1, c2); // using min allows the computation of transpositions\n        }\n        // if matching characters are found, remove 1 from both cursors (they get incremented at the end of the loop)\n        // so that we can have only one code block handling matches\n        for (let j = 0; j < maxOffset && (c1 + j < l1 || c2 + j < l2); j++) {\n          if (c1 + j < l1 && s1.charAt(c1 + j) === s2.charAt(c2)) {\n            c1 += j - 1;\n            c2--;\n            break;\n          }\n          if (c2 + j < l2 && s1.charAt(c1) === s2.charAt(c2 + j)) {\n            c1--;\n            c2 += j - 1;\n            break;\n          }\n        }\n      }\n      c1++;\n      c2++;\n      // this covers the case where the last match is on the last token in list, so that it can compute transpositions correctly\n      if (c1 >= l1 || c2 >= l2) {\n        lcss += localCS;\n        localCS = 0;\n        c1 = c2 = Math.min(c1, c2);\n      }\n    }\n    lcss += localCS;\n    return Math.round(Math.max(l1, l2) - lcss + trans); // add the cost of transpositions to the final result\n  }\n}\n","import { AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { AbstractControlUtil } from \"./../abstract-control-util\";\nimport { EmailSuggestion, EmailOptions } from \"./email-util\";\n\nexport class EmailValidators {\n  private static emailSuggestion: EmailSuggestion = new EmailSuggestion();\n\n  public static simple(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) {\n      return undefined;\n    }\n\n    const pattern = /.+@.+\\..+/i;\n    if (pattern.test(control.value)) {\n      return undefined;\n    }\n    return { simpleEmailRule: true };\n  }\n\n  // https://www.w3.org/TR/html5/forms.html#valid-e-mail-address\n  public static normal(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) {\n      return undefined;\n    }\n    // tslint:disable-next-line:max-line-length\n    const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n    if (pattern.test(control.value)) {\n      return undefined;\n    }\n    return { normalEmailRule: true };\n  }\n\n  public static suggest(options?: EmailOptions): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) {\n        return undefined;\n      }\n      return this.emailSuggestion.suggest(control.value, options);\n    };\n    return validator;\n  }\n}\n","import { AbstractControl, ValidatorFn, ValidationErrors } from \"@angular/forms\";\nimport { AbstractControlUtil } from \"../abstract-control-util\";\n\nexport class UniversalValidators {\n  public static noWhitespace(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    const pattern = \"\\\\s\";\n    if (new RegExp(pattern).test(control.value)) {\n      return { noWhitespaceRequired: true };\n    }\n    return undefined;\n  }\n\n  public static noEmptyString(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (control.value.trim().length === 0) {\n      return { noEmptyString: true };\n    }\n    return undefined;\n  }\n\n  public static isNumber(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (isNaN(control.value)) {\n      return { numberRequired: true };\n    }\n    return undefined;\n  }\n\n  public static isInRange(minValue: number, maxValue: number): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      if (isNaN(control.value)) {\n        return { numberRequired: true };\n      }\n      if (+control.value < minValue) {\n        return {\n          rangeValueToSmall: {\n            requiredMinValue: minValue,\n            requiredMaxValue: maxValue,\n            actual: control.value,\n          },\n        };\n      }\n\n      if (+control.value > maxValue) {\n        return {\n          rangeValueToBig: {\n            requiredMinValue: minValue,\n            requiredMaxValue: maxValue,\n            actual: control.value,\n          },\n        };\n      } else {\n        return undefined;\n      }\n    };\n    return validator;\n  }\n\n  public static minLength(minLength: number) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (value.length >= minLength) {\n        return undefined;\n      }\n      return {\n        minLength: { requiredMinLength: minLength, actualLength: value.length },\n      };\n    };\n    return validator;\n  }\n\n  public static maxLength(maxLength: number) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (maxLength >= value.length) {\n        return undefined;\n      }\n      return {\n        maxLength: { requiredMaxLength: maxLength, actualLength: value.length },\n      };\n    };\n    return validator;\n  }\n\n  public static min(min: number) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (isNaN(control.value)) {\n        return { numberRequired: true };\n      }\n      if (+value >= min) {\n        return undefined;\n      }\n      return { min: { required: min, actual: control.value } };\n    };\n    return validator;\n  }\n\n  public static max(max: number) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const value: string = control.value;\n      if (isNaN(control.value)) {\n        return { numberRequired: true };\n      }\n      if (max >= +value) {\n        return undefined;\n      }\n      return { max: { required: max, actual: control.value } };\n    };\n    return validator;\n  }\n\n  public static minDate(minDate: Date) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const date: Date = new Date(control.value);\n      if (isNaN(date.getTime())) {\n        return { dateRequired: true };\n      }\n      if (date.getTime() >= minDate.getTime()) {\n        return undefined;\n      }\n      return { minDate: { required: minDate, actual: date } };\n    };\n    return validator;\n  }\n\n  public static maxDate(minDate: Date) {\n    const validator = (control: AbstractControl): ValidationErrors => {\n      if (AbstractControlUtil.isNotPresent(control)) return undefined;\n      const date: Date = new Date(control.value);\n      if (isNaN(date.getTime())) {\n        return { dateRequired: true };\n      }\n      if (date.getTime() <= minDate.getTime()) {\n        return undefined;\n      }\n      return { maxDate: { required: minDate, actual: date } };\n    };\n    return validator;\n  }\n}\n","import { AbstractControl } from \"@angular/forms\";\nimport { AbstractControlUtil } from \"./../abstract-control-util\";\n\nconst visaRegex = \"^(?:4[0-9]{12})(?:[0-9]{3})?$\";\nconst americanExpressRegex = \"^(?:3[47][0-9]{13})$\";\nconst maestroRegex = \"^(?:(?:5[0678]\\\\d\\\\d|6304|6390|67\\\\d\\\\d)\\\\d{8,15})$\";\nconst jcbRegex = \"^(?:(?:2131|1800|35\\\\d{3})\\\\d{11})$\";\nconst discoverRegex = \"^(?:6(?:011|5[0-9]{2})(?:[0-9]{12}))$\";\nconst dinersclubRegex = \"^(?:3(?:0[0-5]|[68][0-9])[0-9]{11})$\";\nconst mastercardRegex = \"^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$\";\n\nexport class CreditCardValidators {\n  public static isCreditCard(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (\n      new RegExp(\n        americanExpressRegex +\n          \"|\" +\n          visaRegex +\n          \"|\" +\n          maestroRegex +\n          \"|\" +\n          jcbRegex +\n          \"|\" +\n          discoverRegex +\n          \"|\" +\n          mastercardRegex +\n          \"|\" +\n          dinersclubRegex\n      ).test(control.value)\n    ) {\n      return undefined;\n    }\n    return { creditcard: true };\n  }\n\n  public static americanExpress(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(americanExpressRegex).test(control.value)) {\n      return undefined;\n    }\n    return { americanExpress: true };\n  }\n\n  public static dinersclub(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(dinersclubRegex).test(control.value)) {\n      return undefined;\n    }\n    return { dinersclub: true };\n  }\n\n  public static discover(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(discoverRegex).test(control.value)) {\n      return undefined;\n    }\n    return { discover: true };\n  }\n  public static jcb(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(jcbRegex).test(control.value)) {\n      return undefined;\n    }\n    return { jcb: true };\n  }\n  public static maestro(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(maestroRegex).test(control.value)) {\n      return undefined;\n    }\n    return { maestro: true };\n  }\n\n  public static mastercard(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(mastercardRegex).test(control.value)) {\n      return undefined;\n    }\n    return { mastercard: true };\n  }\n\n  public static visa(control: AbstractControl): { [key: string]: boolean } {\n    if (AbstractControlUtil.isNotPresent(control)) return undefined;\n    if (new RegExp(visaRegex).test(control.value)) {\n      return undefined;\n    }\n    return { visa: true };\n  }\n}\n","import { Directive, Input, forwardRef, OnInit, SimpleChanges, OnChanges } from \"@angular/core\";\nimport { NG_VALIDATORS, Validator, Validators, ValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\n\nimport { PasswordValidators } from \"./password-validators\";\n\n@Directive({\n  selector: \"[password][formControlName],[password][formControl],[password][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => PasswordValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class PasswordValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() repeatCharacter = 4;\n  @Input() alphabeticalCharacter = 1;\n  @Input() digitCharacter = 1;\n  @Input() lowercaseCharacter = 1;\n  @Input() uppercaseCharacter = 1;\n\n  private repeatCharacterValidator: ValidatorFn;\n  private alphabeticalCharacterValidator: ValidatorFn;\n  private digitCharacterValidator: ValidatorFn;\n  private lowercaseCharacterValidator: ValidatorFn;\n  private uppercaseCharacterValidator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.repeatCharacterValidator = PasswordValidators.repeatCharacterRegexRule(this.repeatCharacter);\n    this.alphabeticalCharacterValidator = PasswordValidators.alphabeticalCharacterRule(this.alphabeticalCharacter);\n    this.digitCharacterValidator = PasswordValidators.digitCharacterRule(this.digitCharacter);\n    this.lowercaseCharacterValidator = PasswordValidators.lowercaseCharacterRule(this.lowercaseCharacter);\n    this.uppercaseCharacterValidator = PasswordValidators.uppercaseCharacterRule(this.uppercaseCharacter);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let inputChanged = false;\n    if (changes.repeatCharacter) {\n      this.repeatCharacterValidator = PasswordValidators.repeatCharacterRegexRule(changes.repeatCharacter.currentValue);\n      inputChanged = changes.repeatCharacter.isFirstChange() ? false : true;\n    }\n\n    if (changes.alphabeticalCharacter) {\n      this.alphabeticalCharacterValidator = PasswordValidators.alphabeticalCharacterRule(\n        changes.alphabeticalCharacter.currentValue\n      );\n      inputChanged = changes.alphabeticalCharacter.isFirstChange() ? false : true;\n    }\n\n    if (changes.digitCharacter) {\n      this.digitCharacterValidator = PasswordValidators.digitCharacterRule(changes.digitCharacter.currentValue);\n      inputChanged = changes.digitCharacter.isFirstChange() ? false : true;\n    }\n\n    if (changes.lowercaseCharacter) {\n      this.lowercaseCharacterValidator = PasswordValidators.lowercaseCharacterRule(\n        changes.lowercaseCharacter.currentValue\n      );\n      inputChanged = changes.lowercaseCharacter.isFirstChange() ? false : true;\n    }\n\n    if (changes.uppercaseCharacter) {\n      this.uppercaseCharacterValidator = PasswordValidators.uppercaseCharacterRule(\n        changes.uppercaseCharacter.currentValue\n      );\n      inputChanged = changes.uppercaseCharacter.isFirstChange() ? false : true;\n    }\n\n    if (inputChanged) {\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    const compose: ValidatorFn = Validators.compose([\n      this.repeatCharacterValidator,\n      this.digitCharacterValidator,\n      this.alphabeticalCharacterValidator,\n      this.lowercaseCharacterValidator,\n      this.uppercaseCharacterValidator,\n    ]);\n    return compose(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { EmailOptions } from \"./email-util\";\nimport { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\n\nimport { EmailValidators } from \"./email-validators\";\n\n@Directive({\n  selector: \"[email][formControlName],[email][formControl],[email][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => EmailValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class EmailValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() email: \"normal\" | \"simple\" = \"normal\";\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.setValidator(this.email);\n  }\n\n  setValidator(type: string) {\n    switch (type) {\n      case \"simple\":\n        this.validator = EmailValidators.simple;\n        break;\n      case \"normal\":\n        this.validator = EmailValidators.normal;\n        break;\n      default:\n        this.validator = EmailValidators.normal;\n        break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.email && !changes.email.isFirstChange()) {\n      this.setValidator(changes.email.currentValue);\n      this.onChange();\n    }\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n}\n\n@Directive({\n  selector: \"[emailSuggest][formControlName],[emailSuggest][formControl],[emailSuggest][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => EmailSuggestValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class EmailSuggestValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() emailSuggest: EmailOptions;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = EmailValidators.suggest(this.emailSuggest);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.emailSuggest && !changes.emailSuggest.isFirstChange()) {\n      this.validator = EmailValidators.suggest(changes.emailSuggest.currentValue);\n      this.onChange();\n    }\n  }\n\n  registerOnValidatorChange?(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n}\n","import { Directive, forwardRef, Input, OnInit, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nimport { UniversalValidators } from \"./universal-validators\";\n\n@Directive({\n  selector: \"[noWhitespace][formControlName],[noWhitespace][formControl],[noWhitespace][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => WhiteSpaceValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class WhiteSpaceValidatorDirective implements Validator, OnInit {\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.noWhitespace;\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n}\n\n@Directive({\n  selector: \"[noEmptyString][formControlName],[noEmptyString][formControl],[noEmptyString][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => EmptyStringValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class EmptyStringValidatorDirective implements Validator, OnInit {\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.noEmptyString;\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n}\n\n@Directive({\n  selector: \"[isNumber][formControlName],[isNumber][formControl],[isNumber][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => IsNumberValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class IsNumberValidatorDirective implements Validator, OnInit {\n  private validator: ValidatorFn;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.isNumber;\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n}\n\n@Directive({\n  selector: \"[isInRange][formControlName],[isInRange][formControl],[isInRange][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => IsInRangeValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class IsInRangeValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() minValue: number;\n  @Input() maxValue: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.isInRange(this.minValue, this.maxValue);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    let minValue = this.minValue;\n    let maxValue = this.maxValue;\n    let changed = false;\n\n    if (changes.minValue) {\n      minValue = changes.minValue.currentValue;\n      changed = changes.minValue.isFirstChange() ? false : true;\n    }\n\n    if (changes.maxValue) {\n      maxValue = changes.maxValue.currentValue;\n      changed = changes.maxValue.isFirstChange() ? false : true;\n    }\n\n    if (changed) {\n      this.validator = UniversalValidators.isInRange(minValue, maxValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n@Directive({\n  selector: \"input[type=text][max][formControlName],input[type=text][max][formControl],input[type=text][max][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => MaxValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MaxValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() max: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.max(this.max);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.max && !changes.max.isFirstChange()) {\n      this.validator = UniversalValidators.max(changes.max.currentValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n@Directive({\n  selector: \"input[type=text][min][formControlName],input[type=text][min][formControl],input[type=text][min][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => MinValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MinValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() min: number;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.min(this.min);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.min && !changes.min.isFirstChange()) {\n      this.validator = UniversalValidators.min(changes.min.currentValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n@Directive({\n  selector: \"input[type=text][minDate][formControlName],input[type=text][minDate][formControl],input[type=text][minDate][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => MinDateValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MinDateValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() minDate: string;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.minDate(new Date(this.minDate));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.minDate && !changes.minDate.isFirstChange()) {\n      this.validator = UniversalValidators.minDate(changes.min.currentValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n\n@Directive({\n  selector: \"input[type=text][maxDate][formControlName],input[type=text][maxDate][formControl],input[type=text][maxDate][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => MaxDateValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class MaxDateValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() maxDate: string;\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = UniversalValidators.maxDate(new Date(this.maxDate));\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.maxDate && !changes.maxDate.isFirstChange()) {\n      this.validator = UniversalValidators.maxDate(changes.min.currentValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}","import { Directive, Input, forwardRef, OnInit, SimpleChanges, OnChanges } from \"@angular/core\";\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl, ValidationErrors } from \"@angular/forms\";\n\nimport { CreditCardValidators } from \"./creditcard-validators\";\n\n@Directive({\n  selector: \"[creditCard][formControlName],[creditCard][formControl],[creditCard][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      useExisting: forwardRef(() => CreditCardValidatorDirective),\n      multi: true,\n    },\n  ],\n})\nexport class CreditCardValidatorDirective implements Validator, OnInit, OnChanges {\n  @Input() creditCard = \"all\";\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.setCreditcardValidator(this.creditCard);\n  }\n\n  setCreditcardValidator(type: string) {\n    switch (type) {\n      case \"all\":\n        this.validator = CreditCardValidators.isCreditCard;\n        break;\n      case \"americanExpress\":\n        this.validator = CreditCardValidators.americanExpress;\n        break;\n      case \"dinersclub\":\n        this.validator = CreditCardValidators.dinersclub;\n        break;\n      case \"discover\":\n        this.validator = CreditCardValidators.discover;\n        break;\n      case \"jcb\":\n        this.validator = CreditCardValidators.jcb;\n        break;\n      case \"maestro\":\n        this.validator = CreditCardValidators.maestro;\n        break;\n      case \"mastercard\":\n        this.validator = CreditCardValidators.mastercard;\n        break;\n      case \"visa\":\n        this.validator = CreditCardValidators.visa;\n        break;\n      default:\n        this.validator = CreditCardValidators.isCreditCard;\n        break;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.creditCard && !changes.creditCard.isFirstChange()) {\n      this.setCreditcardValidator(changes.creditCard.currentValue);\n      this.onChange();\n    }\n  }\n\n  validate(c: AbstractControl): ValidationErrors {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import { Directive, forwardRef, Input, OnDestroy, SimpleChanges, OnChanges } from \"@angular/core\";\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\n\n@Directive({\n  selector: \"[equalTo][ngModel], [equalTo][formControlName], [equalTo][formControl]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => EqualToDirective),\n      multi: true,\n    },\n  ],\n})\nexport class EqualToDirective implements Validator, OnDestroy, OnChanges {\n  @Input() equalTo: string | AbstractControl;\n\n  private subscription: Subscription;\n  private onChange: () => void;\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    const otherControl = typeof this.equalTo === \"string\" ? c.parent.get(this.equalTo) : this.equalTo;\n\n    if (!this.subscription) {\n      this.subscription = otherControl.valueChanges.pipe(delay(1)).subscribe(() => {\n        c.updateValueAndValidity();\n      });\n    }\n    return c.value !== otherControl.value ? { notEqualTo: true } : null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.equalTo && !changes.equalTo.isFirstChange()) {\n      this.onChange();\n    }\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","import {\n  EmptyStringValidatorDirective,\n  IsInRangeValidatorDirective,\n  IsNumberValidatorDirective,\n  MaxDateValidatorDirective,\n  MaxValidatorDirective,\n  MinDateValidatorDirective,\n  MinValidatorDirective,\n  WhiteSpaceValidatorDirective,\n} from \"./universal/universal.directive\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CreditCardValidatorDirective } from \"./creditcard/creditcard.directive\";\nimport { EmailValidatorDirective, EmailSuggestValidatorDirective } from \"./email/email.directive\";\nimport { PasswordValidatorDirective } from \"./password/password.directive\";\nimport { EqualToDirective } from \"./equal-to/equal-to.directive\";\n\n@NgModule({\n  declarations: [\n    CreditCardValidatorDirective,\n    EmailValidatorDirective,\n    EmailSuggestValidatorDirective,\n    PasswordValidatorDirective,\n    IsInRangeValidatorDirective,\n    IsNumberValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    MinDateValidatorDirective,\n    MaxDateValidatorDirective,\n    WhiteSpaceValidatorDirective,\n    EmptyStringValidatorDirective,\n    EqualToDirective,\n  ],\n  exports: [\n    CreditCardValidatorDirective,\n    EmailValidatorDirective,\n    EmailSuggestValidatorDirective,\n    PasswordValidatorDirective,\n    IsInRangeValidatorDirective,\n    IsNumberValidatorDirective,\n    MaxValidatorDirective,\n    MinValidatorDirective,\n    MinDateValidatorDirective,\n    MaxDateValidatorDirective,\n    WhiteSpaceValidatorDirective,\n    EmptyStringValidatorDirective,\n    EqualToDirective,\n  ],\n})\nexport class ValidatorsModule {}\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\";\nimport { AbstractControlUtil } from \"../abstract-control-util\";\n\nexport class EqualToValidator {\n  static equalTo(c1Name: string, c2Name: string): ValidatorFn {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const validator = (parent: AbstractControl): any => {\n      const c1 = parent.get(c1Name);\n      const c2 = parent.get(c2Name);\n\n      if (c1.value === c2.value) {\n        AbstractControlUtil.removeError(c2, \"notEqualTo\");\n      } else {\n        AbstractControlUtil.addError(c2, \"notEqualTo\", true);\n      }\n    };\n    return validator;\n  }\n}\n","// validators\nexport { PasswordValidators } from \"./components/password/password-validators\";\nexport { EmailValidators } from \"./components/email/email-validators\";\nexport * from \"./components/email/email-util\";\nexport { UniversalValidators } from \"./components/universal/universal-validators\";\nexport { CreditCardValidators } from \"./components/creditcard/creditcard-validators\";\n\n// Directive\nexport { PasswordValidatorDirective } from \"./components/password/password.directive\";\nexport { EmailValidatorDirective, EmailSuggestValidatorDirective } from \"./components/email/email.directive\";\nexport {\n  IsInRangeValidatorDirective,\n  IsNumberValidatorDirective,\n  MaxValidatorDirective,\n  MinValidatorDirective,\n  WhiteSpaceValidatorDirective,\n  EmptyStringValidatorDirective,\n} from \"./components/universal/universal.directive\";\nexport { CreditCardValidatorDirective } from \"./components/creditcard/creditcard.directive\";\n\n// Module\nexport { ValidatorsModule } from \"./components/validators.module\";\n\n// Util\nexport { AbstractControlUtil } from \"./components/abstract-control-util\";\n\n// EqualTo\nexport * from \"./components/equal-to/equal-to.directive\";\nexport * from \"./components/equal-to/equal-to-validator\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MaxDateValidatorDirective as ɵb,MinDateValidatorDirective as ɵa} from './components/universal/universal.directive';"]}