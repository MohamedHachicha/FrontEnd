{"version":3,"file":"universal.directive.d.ts","sources":["universal.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnChanges, SimpleChanges } from \"@angular/core\";\nimport { AbstractControl, Validator, ValidationErrors } from \"@angular/forms\";\nexport declare class WhiteSpaceValidatorDirective implements Validator, OnInit {\n    private validator;\n    ngOnInit(): void;\n    validate(c: AbstractControl): ValidationErrors;\n}\nexport declare class EmptyStringValidatorDirective implements Validator, OnInit {\n    private validator;\n    ngOnInit(): void;\n    validate(c: AbstractControl): ValidationErrors;\n}\nexport declare class IsNumberValidatorDirective implements Validator, OnInit {\n    private validator;\n    ngOnInit(): void;\n    validate(c: AbstractControl): ValidationErrors;\n}\nexport declare class IsInRangeValidatorDirective implements Validator, OnInit, OnChanges {\n    minValue: number;\n    maxValue: number;\n    private validator;\n    private onChange;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(c: AbstractControl): ValidationErrors;\n    registerOnValidatorChange(fn: () => void): void;\n}\nexport declare class MaxValidatorDirective implements Validator, OnInit, OnChanges {\n    max: number;\n    private validator;\n    private onChange;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(c: AbstractControl): ValidationErrors;\n    registerOnValidatorChange(fn: () => void): void;\n}\nexport declare class MinValidatorDirective implements Validator, OnInit, OnChanges {\n    min: number;\n    private validator;\n    private onChange;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(c: AbstractControl): ValidationErrors;\n    registerOnValidatorChange(fn: () => void): void;\n}\nexport declare class MinDateValidatorDirective implements Validator, OnInit, OnChanges {\n    minDate: string;\n    private validator;\n    private onChange;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(c: AbstractControl): ValidationErrors;\n    registerOnValidatorChange(fn: () => void): void;\n}\nexport declare class MaxDateValidatorDirective implements Validator, OnInit, OnChanges {\n    maxDate: string;\n    private validator;\n    private onChange;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    validate(c: AbstractControl): ValidationErrors;\n    registerOnValidatorChange(fn: () => void): void;\n}\n"]}