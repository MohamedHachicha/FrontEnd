import { ViewContainerRef, TemplateRef, AfterViewInit, OnInit, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class NgWormholeDirective implements AfterViewInit, OnInit, OnChanges, OnDestroy {
    private viewContainerRef;
    private templateRef;
    ngWormholeRenderInPlace: boolean;
    ngWormhole: string | Element;
    private embeddedViewRef;
    private initialized;
    private document;
    constructor(viewContainerRef: ViewContainerRef, templateRef: TemplateRef<any>, document: any);
    readonly destinationElement: Element | null;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private appendToDestination();
    private getActiveElement();
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgWormholeDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<NgWormholeDirective, "[ngWormhole]", never, { "ngWormholeRenderInPlace": "ngWormholeRenderInPlace"; "ngWormhole": "ngWormhole"; }, {}, never>;
}

//# sourceMappingURL=ng-wormhole.directive.d.ts.map